@using Microsoft.AspNetCore.Components
@inject NavigationManager NavigationManager
@using System.Globalization
@using System.Text

<div class="bg-gray-100 h-80 w-80 border border-gray-200 rounded-lg shadow-sm ">

    <div>
        <img class="rounded-lg w-full max-h-48  object-contain" src="@Image" alt="" />
    </div>

    <div class="p-4">
        <div href="#">
            <h5 class="mb-2 text-black text-2xl font-bold tracking-tight text-gray-900 ">
                @Category
            </h5>
        </div>

        <NavLink href="@($"/produtos/{RemoveAccents(Category).ToLower()}")">
            <button class="inline-flex items-center px-3 py-2 text-sm font-medium text-center text-white bg-blue-700
        rounded-lg hover:bg-blue-800 focus:ring-4 focus:outline-none focus:ring-blue-300 dark:bg-blue-600
        dark:hover:bg-blue-700 dark:focus:ring-blue-800">
                Ver categoria
                <svg class="rtl:rotate-180 w-3.5 h-3.5 ms-2" aria-hidden="true" xmlns="http://www.w3.org/2000/svg"
                    fill="none" viewBox="0 0 14 10">
                    <path stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="2"
                        d="M1 5h12m0 0L9 1m4 4L9 9" />
                </svg>
            </button>
        </NavLink>

    </div>
</div>

@code {
    [Parameter]
    public string Category { get; set; }

    [Parameter]
    public string Image { get; set; }

    private string RemoveAccents(string text)
    {
        if (string.IsNullOrWhiteSpace(text))
            return text;

        var normalizedString = text.Normalize(NormalizationForm.FormD);
        var stringBuilder = new StringBuilder();

        foreach (var c in normalizedString)
        {
            var unicodeCategory = CharUnicodeInfo.GetUnicodeCategory(c);
            if (unicodeCategory != UnicodeCategory.NonSpacingMark)
            {
                stringBuilder.Append(c);
            }
        }
        return stringBuilder.ToString().Normalize(NormalizationForm.FormC);
    }

}